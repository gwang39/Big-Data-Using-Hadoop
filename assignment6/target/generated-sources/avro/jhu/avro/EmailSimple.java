/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package jhu.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EmailSimple extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmailSimple\",\"namespace\":\"jhu.avro\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"long\"]},{\"name\":\"from\",\"type\":[\"null\",\"string\"]},{\"name\":\"to\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"cc\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"bcc\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"subject\",\"type\":[\"null\",\"string\"]},{\"name\":\"body\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long date;
  @Deprecated public java.lang.CharSequence from;
  @Deprecated public java.util.List<java.lang.CharSequence> to;
  @Deprecated public java.util.List<java.lang.CharSequence> cc;
  @Deprecated public java.util.List<java.lang.CharSequence> bcc;
  @Deprecated public java.lang.CharSequence subject;
  @Deprecated public java.lang.CharSequence body;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EmailSimple() {}

  /**
   * All-args constructor.
   */
  public EmailSimple(java.lang.Long date, java.lang.CharSequence from, java.util.List<java.lang.CharSequence> to, java.util.List<java.lang.CharSequence> cc, java.util.List<java.lang.CharSequence> bcc, java.lang.CharSequence subject, java.lang.CharSequence body) {
    this.date = date;
    this.from = from;
    this.to = to;
    this.cc = cc;
    this.bcc = bcc;
    this.subject = subject;
    this.body = body;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return from;
    case 2: return to;
    case 3: return cc;
    case 4: return bcc;
    case 5: return subject;
    case 6: return body;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.Long)value$; break;
    case 1: from = (java.lang.CharSequence)value$; break;
    case 2: to = (java.util.List<java.lang.CharSequence>)value$; break;
    case 3: cc = (java.util.List<java.lang.CharSequence>)value$; break;
    case 4: bcc = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: subject = (java.lang.CharSequence)value$; break;
    case 6: body = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'from' field.
   */
  public java.lang.CharSequence getFrom() {
    return from;
  }

  /**
   * Sets the value of the 'from' field.
   * @param value the value to set.
   */
  public void setFrom(java.lang.CharSequence value) {
    this.from = value;
  }

  /**
   * Gets the value of the 'to' field.
   */
  public java.util.List<java.lang.CharSequence> getTo() {
    return to;
  }

  /**
   * Sets the value of the 'to' field.
   * @param value the value to set.
   */
  public void setTo(java.util.List<java.lang.CharSequence> value) {
    this.to = value;
  }

  /**
   * Gets the value of the 'cc' field.
   */
  public java.util.List<java.lang.CharSequence> getCc() {
    return cc;
  }

  /**
   * Sets the value of the 'cc' field.
   * @param value the value to set.
   */
  public void setCc(java.util.List<java.lang.CharSequence> value) {
    this.cc = value;
  }

  /**
   * Gets the value of the 'bcc' field.
   */
  public java.util.List<java.lang.CharSequence> getBcc() {
    return bcc;
  }

  /**
   * Sets the value of the 'bcc' field.
   * @param value the value to set.
   */
  public void setBcc(java.util.List<java.lang.CharSequence> value) {
    this.bcc = value;
  }

  /**
   * Gets the value of the 'subject' field.
   */
  public java.lang.CharSequence getSubject() {
    return subject;
  }

  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.CharSequence value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'body' field.
   */
  public java.lang.CharSequence getBody() {
    return body;
  }

  /**
   * Sets the value of the 'body' field.
   * @param value the value to set.
   */
  public void setBody(java.lang.CharSequence value) {
    this.body = value;
  }

  /** Creates a new EmailSimple RecordBuilder */
  public static jhu.avro.EmailSimple.Builder newBuilder() {
    return new jhu.avro.EmailSimple.Builder();
  }
  
  /** Creates a new EmailSimple RecordBuilder by copying an existing Builder */
  public static jhu.avro.EmailSimple.Builder newBuilder(jhu.avro.EmailSimple.Builder other) {
    return new jhu.avro.EmailSimple.Builder(other);
  }
  
  /** Creates a new EmailSimple RecordBuilder by copying an existing EmailSimple instance */
  public static jhu.avro.EmailSimple.Builder newBuilder(jhu.avro.EmailSimple other) {
    return new jhu.avro.EmailSimple.Builder(other);
  }
  
  /**
   * RecordBuilder for EmailSimple instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmailSimple>
    implements org.apache.avro.data.RecordBuilder<EmailSimple> {

    private java.lang.Long date;
    private java.lang.CharSequence from;
    private java.util.List<java.lang.CharSequence> to;
    private java.util.List<java.lang.CharSequence> cc;
    private java.util.List<java.lang.CharSequence> bcc;
    private java.lang.CharSequence subject;
    private java.lang.CharSequence body;

    /** Creates a new Builder */
    private Builder() {
      super(jhu.avro.EmailSimple.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(jhu.avro.EmailSimple.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.from)) {
        this.from = data().deepCopy(fields()[1].schema(), other.from);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.to)) {
        this.to = data().deepCopy(fields()[2].schema(), other.to);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cc)) {
        this.cc = data().deepCopy(fields()[3].schema(), other.cc);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bcc)) {
        this.bcc = data().deepCopy(fields()[4].schema(), other.bcc);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.body)) {
        this.body = data().deepCopy(fields()[6].schema(), other.body);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EmailSimple instance */
    private Builder(jhu.avro.EmailSimple other) {
            super(jhu.avro.EmailSimple.SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.from)) {
        this.from = data().deepCopy(fields()[1].schema(), other.from);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.to)) {
        this.to = data().deepCopy(fields()[2].schema(), other.to);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cc)) {
        this.cc = data().deepCopy(fields()[3].schema(), other.cc);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bcc)) {
        this.bcc = data().deepCopy(fields()[4].schema(), other.bcc);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.body)) {
        this.body = data().deepCopy(fields()[6].schema(), other.body);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'date' field */
    public java.lang.Long getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public jhu.avro.EmailSimple.Builder setDate(java.lang.Long value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'date' field */
    public jhu.avro.EmailSimple.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'from' field */
    public java.lang.CharSequence getFrom() {
      return from;
    }
    
    /** Sets the value of the 'from' field */
    public jhu.avro.EmailSimple.Builder setFrom(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.from = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'from' field has been set */
    public boolean hasFrom() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'from' field */
    public jhu.avro.EmailSimple.Builder clearFrom() {
      from = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'to' field */
    public java.util.List<java.lang.CharSequence> getTo() {
      return to;
    }
    
    /** Sets the value of the 'to' field */
    public jhu.avro.EmailSimple.Builder setTo(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.to = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'to' field has been set */
    public boolean hasTo() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'to' field */
    public jhu.avro.EmailSimple.Builder clearTo() {
      to = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'cc' field */
    public java.util.List<java.lang.CharSequence> getCc() {
      return cc;
    }
    
    /** Sets the value of the 'cc' field */
    public jhu.avro.EmailSimple.Builder setCc(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.cc = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'cc' field has been set */
    public boolean hasCc() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'cc' field */
    public jhu.avro.EmailSimple.Builder clearCc() {
      cc = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'bcc' field */
    public java.util.List<java.lang.CharSequence> getBcc() {
      return bcc;
    }
    
    /** Sets the value of the 'bcc' field */
    public jhu.avro.EmailSimple.Builder setBcc(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.bcc = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'bcc' field has been set */
    public boolean hasBcc() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'bcc' field */
    public jhu.avro.EmailSimple.Builder clearBcc() {
      bcc = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'subject' field */
    public java.lang.CharSequence getSubject() {
      return subject;
    }
    
    /** Sets the value of the 'subject' field */
    public jhu.avro.EmailSimple.Builder setSubject(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.subject = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'subject' field has been set */
    public boolean hasSubject() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'subject' field */
    public jhu.avro.EmailSimple.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'body' field */
    public java.lang.CharSequence getBody() {
      return body;
    }
    
    /** Sets the value of the 'body' field */
    public jhu.avro.EmailSimple.Builder setBody(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.body = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'body' field has been set */
    public boolean hasBody() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'body' field */
    public jhu.avro.EmailSimple.Builder clearBody() {
      body = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public EmailSimple build() {
      try {
        EmailSimple record = new EmailSimple();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.Long) defaultValue(fields()[0]);
        record.from = fieldSetFlags()[1] ? this.from : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.to = fieldSetFlags()[2] ? this.to : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        record.cc = fieldSetFlags()[3] ? this.cc : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        record.bcc = fieldSetFlags()[4] ? this.bcc : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.subject = fieldSetFlags()[5] ? this.subject : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.body = fieldSetFlags()[6] ? this.body : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
